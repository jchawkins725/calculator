{"version":3,"sources":["App.js","logo.svg","serviceWorker.js","index.js"],"names":["allbuttons","id","value","keycode","Display","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","this","props","equation","result","previousNumber","currentNumber","React","Component","test","Buttons","_this","onClick","clear","decimal","equal","plusminus","parseInt","number","index","operator","App","_this2","Object","_Users_jonathan_Documents_workspace_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_jonathan_Documents_workspace_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_jonathan_Documents_workspace_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","handleClear","bind","_Users_jonathan_Documents_workspace_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleNumbers","handleOperators","handleEquals","handleDecimal","handlePlusMinus","setState","i","prevState","includes","_this3","slice","length","replace","_this4","expression","expressiontwo","substr","solved","eval","_this5","buttons","map","x","y","module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc978c12.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst allbuttons = [\n  { id: \"clear\", value: \"AC\", keycode: 67 },\n  { id: \"posneg\", value: \"+/-\", keycode: 77 },\n  { id: \"divide\", value: \"/\", keycode: 191 },\n  { id: \"seven\", value: \"7\", keycode: 55 },\n  { id: \"eight\", value: \"8\", keycode: 56 },\n  { id: \"nine\", value: \"9\", keycode: 57 },\n  { id: \"multiply\", value: \"x\", keycode: 88 },\n  { id: \"four\", value: \"4\", keycode: 52 },\n  { id: \"five\", value: \"5\", keycode: 53 },\n  { id: \"six\", value: \"6\", keycode: 54 },\n  { id: \"subtract\", value: \"-\", keycode: 189 },\n  { id: \"one\", value: \"1\", keycode: 49 },\n  { id: \"two\", value: \"2\", keycode: 50 },\n  { id: \"three\", value: \"3\", keycode: 51 },\n  { id: \"add\", value: \"+\", keycode: 187 },\n  { id: \"zero\", value: \"0\", keycode: 48 },\n  { id: \"decimal\", value: \".\", keycode: 190 },\n  { id: \"equals\", value: \"=\", keycode: 13 }\n];\n\nclass Display extends React.Component {\n  render() {\n    return (\n      <div className=\"displaycontainer\">\n        <p id=\"displayequation\" className={this.props.equation === \"\" ? \"hidden\" : \"\"}>{this.props.equation === \"\" ? this.props.result : this.props.equation}</p>\n        <p id=\"display\">{this.props.previousNumber === \"\" && this.props.currentNumber === \"\" ? this.props.result : this.props.currentNumber === \"\" ? this.props.previousNumber : this.props.currentNumber}</p>\n      </div>\n    )\n  }\n}\nconst test = /(x|-|\\+|\\/)/;\n\nclass Buttons extends React.Component {\n  render() {\n    const value = this.props.value;\n    const id = this.props.id;\n    return (\n      <button id={id} value={value} className={test.test(value) ? \"operators\" : \"\"} onClick={value === \"AC\" ? this.props.clear : value === \".\" ? this.props.decimal : value === \"=\" ? this.props.equal : value === \"+/-\" ? this.props.plusminus : parseInt(value, 10) < 10 ? () => this.props.number(this.props.index) : () => this.props.operator(this.props.index)}>{value}</button>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"0\",\n      equation: \"\",\n      currentNumber: \"\",\n      previousNumber: \"\",\n      operator: \"\",\n      plusminus: true\n    };\n    this.handleClear = this.handleClear.bind(this);\n    this.handleNumbers = this.handleNumbers.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handlePlusMinus = this.handlePlusMinus.bind(this);\n  }\n  handleClear() {\n    this.setState({ equation: \"\", currentNumber: \"\", result: \"0\", previousNumber: \"\", operator: \"\", plusminus: true })\n  }\n  handleNumbers(i) {\n    if (allbuttons[i].value === \"0\" && this.state.currentNumber === \"0\") {\n      return\n    }\n    else {\n      this.setState(prevState => ({ currentNumber: prevState.currentNumber + allbuttons[i].value, operator: \"\", equation: prevState.equation + allbuttons[i].value}));\n    }\n  }\n  handleDecimal() {\n    if (this.state.currentNumber === \"\") {\n      this.setState({ currentNumber: \"0.\", equation: \"0.\" });\n    }\n    else if (!this.state.currentNumber.includes(\".\")) {\n      this.setState(prevState => ({ currentNumber: prevState.currentNumber + \".\", equation: prevState.equation + \".\" }));\n    }\n    else {\n      return\n    }\n  }\n  handleOperators(i) {\n    if (this.state.equation === \"\") {\n      return\n    }\n    else if (test.test(this.state.operator)) {\n      this.setState(prevState => ({ operator: allbuttons[i].value, equation: prevState.equation.slice(0, prevState.equation.length - 2) + allbuttons[i].value.replace(/x/g, \"*\") + \" \" }))\n    }\n    else {\n      this.setState(prevState => ({ operator: allbuttons[i].value, currentNumber: \"\", equation: prevState.equation + \" \" + allbuttons[i].value.replace(/x/g, \"*\") + \" \", previousNumber: this.state.currentNumber }));\n    }\n  }\n  handlePlusMinus() {\n    const expression = /(\\d+)$/;\n    const expressiontwo = /(-\\d+)$/;\n    const expressionthree = /\\s(\\*|x|-|\\+|\\/)/;\n    if (this.state.currentNumber === \"\") {\n      return\n    }\n    else {\n      if (expressiontwo.test(this.state.equation)) {\n        this.setState(prevState => ({ currentNumber: prevState.currentNumber.substr(1), equation: prevState.equation.replace(expressiontwo, this.state.currentNumber.substr(1)) }));\n      }\n      else {\n        this.setState(prevState => ({ currentNumber: \"-\" + prevState.currentNumber, equation: prevState.equation.replace(expression, \"-\" + this.state.currentNumber) }));\n      }\n    }\n  }\n  handleEquals() {\n    if (this.state.equation != \"\") {\n      const solved = eval(this.state.equation)\n      this.setState({ result: solved, currentNumber: \"\", equation: solved, previousNumber: \"\" })\n    }\n  }\n  render() {\n    const buttons = allbuttons.map((x, y) => <Buttons id={x.id} value={x.value} keycode={x.keycode} index={y} clear={this.handleClear} number={this.handleNumbers} decimal={this.handleDecimal} plusminus={this.handlePlusMinus} equal={this.handleEquals} operator={this.handleOperators}/>);\n    return (\n      <div id=\"calculator\">\n        <Display result={this.state.result} currentNumber={this.state.currentNumber} equation={this.state.equation} previousNumber={this.state.previousNumber} />\n        <div id=\"container\">\n          {buttons}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}